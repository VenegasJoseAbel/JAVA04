/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Controlador.MyList;
import Modelo.Analista;
import Modelo.Empleado;
import Modelo.Programador;
import Modelo.SaldoEx;
import java.awt.BorderLayout;
import java.awt.Component;
import java.io.FileInputStream;
import java.io.ObjectInputStream;
import java.util.ArrayList;
import static java.util.Calendar.DAY_OF_MONTH;
import static java.util.Calendar.MONTH;
import static java.util.Calendar.YEAR;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;

/**
 *
// * @author Jose Abel
 */
public class Vista2 extends javax.swing.JFrame {

    /**
     * Creates new form Vista2
     */
    
    private MyList ListaEmpleado;
    boolean butCrear = false;
    private ArrayList<Empleado> collections = new ArrayList<>();
    public Vista2() {
        initComponents();
        ListaEmpleado = new MyList();
//        ListaEmpleado.add(new Programador(3, "maria" , 2102, 400, 50, "Java"));
//        ListaEmpleado.add(new Programador(4, "maria" , 2102, 400, 50, "Java"));
//        ListaEmpleado.add(new Analista(1, "maria" , 2102, 400, 50, 2));
//
//        comprobarTipo();
        desactivarTodo();
        statusFieldFalse();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jFrame2 = new javax.swing.JFrame();
        jFrame3 = new javax.swing.JFrame();
        lblTipo = new javax.swing.JLabel();
        LblNumero = new javax.swing.JLabel();
        LblNombre = new javax.swing.JLabel();
        lblSueldo = new javax.swing.JLabel();
        lblSueldoMaximo = new javax.swing.JLabel();
        lblFecha_alta = new javax.swing.JLabel();
        lblcanbia1 = new javax.swing.JLabel();
        LblCambia2 = new javax.swing.JLabel();
        Primero = new javax.swing.JButton();
        FieldSueldoMaximo = new javax.swing.JTextField();
        FieldSueldo = new javax.swing.JTextField();
        FieldFecha_alta = new javax.swing.JTextField();
        FieldCambia1 = new javax.swing.JTextField();
        FieldNombre = new javax.swing.JTextField();
        FieldCambia2 = new javax.swing.JTextField();
        FieldNumero = new javax.swing.JTextField();
        FieldTipo = new javax.swing.JTextField();
        Atras = new javax.swing.JButton();
        Crear = new javax.swing.JButton();
        Siguiente = new javax.swing.JButton();
        Ultimo = new javax.swing.JButton();
        CargarDatos = new javax.swing.JButton();
        GuardarDatos = new javax.swing.JButton();
        CreadoMasivo = new javax.swing.JButton();
        Ordenar = new javax.swing.JButton();
        JList = new javax.swing.JButton();
        Calcular = new javax.swing.JButton();
        Analista = new javax.swing.JButton();
        Programador = new javax.swing.JButton();
        confirmar = new javax.swing.JButton();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame3Layout = new javax.swing.GroupLayout(jFrame3.getContentPane());
        jFrame3.getContentPane().setLayout(jFrame3Layout);
        jFrame3Layout.setHorizontalGroup(
            jFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame3Layout.setVerticalGroup(
            jFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblTipo.setText("Tipo");

        LblNumero.setText("Numero");

        LblNombre.setText("Nombre");

        lblSueldo.setText("Sueldo");

        lblSueldoMaximo.setText("Sueldo Maximo");

        lblFecha_alta.setText("Fecha Alta");

        lblcanbia1.setText(" ");

        LblCambia2.setText(" ");

        Primero.setText("Primero");
        Primero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrimeroActionPerformed(evt);
            }
        });

        Atras.setText("Atras");
        Atras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AtrasActionPerformed(evt);
            }
        });

        Crear.setText("Crear");
        Crear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CrearActionPerformed(evt);
            }
        });

        Siguiente.setText("Siguiente");
        Siguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SiguienteActionPerformed(evt);
            }
        });

        Ultimo.setText("Ultimo");
        Ultimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UltimoActionPerformed(evt);
            }
        });

        CargarDatos.setText("Cargar Datos");
        CargarDatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CargarDatosActionPerformed(evt);
            }
        });

        GuardarDatos.setText("Guardar Datos");
        GuardarDatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarDatosActionPerformed(evt);
            }
        });

        CreadoMasivo.setText("Creado Masivo");
        CreadoMasivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreadoMasivoActionPerformed(evt);
            }
        });

        Ordenar.setText("Ordenar");
        Ordenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OrdenarActionPerformed(evt);
            }
        });

        JList.setText("JList");
        JList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JListActionPerformed(evt);
            }
        });

        Calcular.setText("Calcular");
        Calcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CalcularActionPerformed(evt);
            }
        });

        Analista.setText("Analista");
        Analista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnalistaActionPerformed(evt);
            }
        });

        Programador.setText("Programador");
        Programador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProgramadorActionPerformed(evt);
            }
        });

        confirmar.setText("Confirmar");
        confirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(lblSueldoMaximo)
                                        .addComponent(lblSueldo)
                                        .addComponent(lblFecha_alta)
                                        .addComponent(LblNombre)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(LblCambia2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGap(2, 2, 2)))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblcanbia1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGap(12, 12, 12)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(LblNumero)
                                    .addComponent(lblTipo))
                                .addGap(44, 44, 44)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(FieldSueldoMaximo)
                            .addComponent(FieldSueldo, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)
                            .addComponent(FieldFecha_alta)
                            .addComponent(FieldCambia1)
                            .addComponent(FieldNombre)
                            .addComponent(FieldNumero)
                            .addComponent(FieldTipo)
                            .addComponent(FieldCambia2)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Primero)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Atras)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Crear)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Siguiente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Ultimo))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Analista, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Programador, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(confirmar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(CargarDatos, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(GuardarDatos, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(CreadoMasivo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Ordenar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(JList, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Calcular, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTipo)
                    .addComponent(FieldTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CargarDatos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LblNumero)
                    .addComponent(FieldNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GuardarDatos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LblNombre)
                    .addComponent(FieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSueldo)
                    .addComponent(FieldSueldo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CreadoMasivo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSueldoMaximo)
                    .addComponent(FieldSueldoMaximo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Ordenar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFecha_alta)
                    .addComponent(FieldFecha_alta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JList))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblcanbia1)
                    .addComponent(FieldCambia1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LblCambia2)
                    .addComponent(FieldCambia2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Calcular))
                .addGap(18, 29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Primero)
                    .addComponent(Atras)
                    .addComponent(Crear)
                    .addComponent(Siguiente)
                    .addComponent(Ultimo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Analista)
                    .addComponent(Programador)
                    .addComponent(confirmar))
                .addGap(14, 14, 14))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //buttom cargar datos
    private void CargarDatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CargarDatosActionPerformed
           try{
            FileInputStream file = new FileInputStream("Datos.txt");
            ObjectInputStream tubo = new ObjectInputStream(file);
            
            while(true){
                try{
                    ListaEmpleado.add((Empleado) tubo.readObject());
                }
                catch(Exception ex){
                    break;
                }}
            file.close();
            tubo.close();
        }catch(Exception ex){};
        comprobarTipo();
        activarBotones();
    }//GEN-LAST:event_CargarDatosActionPerformed

    //buttom ordenar
    private void OrdenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OrdenarActionPerformed
        Long IniSort = System.currentTimeMillis();
        ListaEmpleado.sort();
        Long EndSort = System.currentTimeMillis();
        
        Long IniCollections = System.currentTimeMillis();
        Collections.sort(collections, new Comparator<Empleado>(){
            @Override
            public int compare(Empleado Emple1, Empleado Emple2){
                return new Integer(Emple1.getNumero()).compareTo(new Integer (Emple2.getNumero()));
            } 
        });
        Long EndCollections = System.currentTimeMillis();
        
        double totalSort = (double) (EndSort - IniSort);
        double totalCollections = (double) (EndCollections - IniCollections);
        
        comprobarTipo();
        JOptionPane.showMessageDialog(rootPane, "La lista en tardo en ordenarse " + totalSort + " milisegundos\nLa Collections tardo en ordenarse " +totalCollections+ " milisegundos");
        
        if(ListaEmpleado.getContador() >= 100){
            ListaEmpleado.mostrar100(true);
        }
        else{
            ListaEmpleado.mostrar100(false);
        }
    }//GEN-LAST:event_OrdenarActionPerformed

    //buttom guradar datos
    private void GuardarDatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarDatosActionPerformed
        ListaEmpleado.Guardarlista();
    }//GEN-LAST:event_GuardarDatosActionPerformed

    //buttom siguinete
    private void SiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SiguienteActionPerformed
        if(!ListaEmpleado.esUltimo()){
            Atras.setEnabled(true);
            Siguiente.setEnabled(true);
            //bolatras = true;
            ListaEmpleado.next();
            comprobarTipo();
        }
        else{
            Siguiente.setEnabled(false);
            Atras.setEnabled(true);
            //bolatras = true;
            ListaEmpleado.next();
            comprobarTipo();           
        }
    }//GEN-LAST:event_SiguienteActionPerformed

    //buttom atras
    private void AtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AtrasActionPerformed
         if(!ListaEmpleado.esPrimero()){
            Atras.setEnabled(true);
            Siguiente.setEnabled(true);
            //bolatras = true;
            ListaEmpleado.retur();
            comprobarTipo(); 
        }
        else{
            Atras.setEnabled(false);
            Siguiente.setEnabled(true);
            //bolatras = false;
            ListaEmpleado.retur();
            comprobarTipo(); 
        }
    }//GEN-LAST:event_AtrasActionPerformed

    //buttom primero
    private void PrimeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrimeroActionPerformed
        ListaEmpleado.setact(ListaEmpleado.getFirst());
        Atras.setEnabled(false);
        Siguiente.setEnabled(true);
        comprobarTipo(); 
    }//GEN-LAST:event_PrimeroActionPerformed

    //buttom ultimo
    private void UltimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UltimoActionPerformed
        ListaEmpleado.setact(ListaEmpleado.getLast());
        Atras.setEnabled(true);
        Siguiente.setEnabled(false);
        comprobarTipo();
    }//GEN-LAST:event_UltimoActionPerformed

    //buttom crear
    private void CrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CrearActionPerformed
        CrearEmpleado();
    }//GEN-LAST:event_CrearActionPerformed

    //buttom crear masivo
    private void CreadoMasivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreadoMasivoActionPerformed
        Random R = new Random();
        
        for( int i = 0; i < 20; i++){
            int numero = R.nextInt(1+2000);
            ListaEmpleado.add(new Analista(numero, null,0, 0, 0, 0));
            collections.add(new Analista(numero, null,0, 0, 0, 0));
        }
        for( int i = 0; i < 10000; i++){
                    int numero = R.nextInt(998000)+2001;
                    ListaEmpleado.add(new Programador(numero, null,0, 0, 0, null));
                    collections.add(new Programador(numero, null,0, 0, 0, null));
        }
        
        comprobarTipo();
        activarBotones();
    }//GEN-LAST:event_CreadoMasivoActionPerformed

    //buttom calcular
    private void CalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CalcularActionPerformed
        Empleado aux = (Empleado)ListaEmpleado.getact().getMain();
        float numero1, numero2, resultado;
        if(aux instanceof Analista){
            try {
                numero1 = aux.getSueldo();
                numero2 = ((Analista) aux).getPlusAnual();
                resultado = numero1 + numero2;
                aux.setSueldo(resultado);
                rellenarFieldAnalista(ListaEmpleado);
                JOptionPane.showMessageDialog(rootPane, "El sueldo se actualizo correctamente");
            } catch (SaldoEx ex) {
                JOptionPane.showMessageDialog(rootPane, "El sueldo supera al sueldo maximo permitido");
            }
        }
        if(aux instanceof Programador){
            try {
                numero1 = aux.getSueldo();
                numero2 = ((Programador) aux).getSueldo_extra();
                resultado = numero1 + numero2;
                aux.setSueldo(resultado);
                rellenarFieldProgramador(ListaEmpleado);
                JOptionPane.showMessageDialog(rootPane, "El sueldo se actualizo correctamente");
            } catch (SaldoEx ex) {
                JOptionPane.showMessageDialog(rootPane, "El sueldo supera al sueldo maximo permitido");
            }
                
        }
    }//GEN-LAST:event_CalcularActionPerformed

    //button jlist
    private void JListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JListActionPerformed
        ListaEmpleado.jlist();
    }//GEN-LAST:event_JListActionPerformed

    //button crear analista
    private void AnalistaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnalistaActionPerformed
        FieldTipo.setText("Analista");
        lblcanbia1.setText("Plus Anual");
        LblCambia2.setText("Numero Depar");
    }//GEN-LAST:event_AnalistaActionPerformed

     //button crear programador
    private void ProgramadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProgramadorActionPerformed
        FieldTipo.setText("Programador");
        lblcanbia1.setText("Sueldo Extra");
        LblCambia2.setText("Lenguaje");
    }//GEN-LAST:event_ProgramadorActionPerformed

    private void confirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmarActionPerformed
        if(FieldTipo.getText().equals("Programador")){
            leerfieldProgramador();
//            int numeroAux;
//            String nombreAux;
//            float SueldoAux;
//            float SueldoMaximoAux;
//            float SueldoExtraAux;
//            String LenguajeAux;
//
//            numeroAux = Integer.parseInt(FieldNumero.getText());
//            nombreAux = FieldNombre.getText();
//            SueldoAux = Float.parseFloat(FieldSueldo.getText());
//            SueldoMaximoAux = Float.parseFloat(FieldSueldoMaximo.getText());
//            SueldoExtraAux = Float.parseFloat(FieldCambia1.getText());
//            LenguajeAux = FieldCambia2.getText();

            //try {
                    /*Programador P1 = new Programador(numeroAux, nombreAux, SueldoAux, SueldoMaximoAux, SueldoExtraAux, LenguajeAux);
                    P1.setSueldo(SueldoAux);
                    ListaEmpleado.add(P1);   
                    rellenarFieldProgramador(ListaEmpleado);
                    activarBotones();
                    statusFieldFalse();
                        if(ListaEmpleado.esPrimero()){
                            Siguiente.setEnabled(false);
                            Atras.setEnabled(true);
                        }
                        else if(ListaEmpleado.esUltimo()){
                            Siguiente.setEnabled(true);
                            Atras.setEnabled(false);
                        }
                        else if(ListaEmpleado.getContador() == 1){
                            Siguiente.setEnabled(false);
                            Atras.setEnabled(false);
                        }*/
           // } catch (SaldoEx ex) {
             //       JOptionPane.showMessageDialog(rootPane, "El sueldo supera al sueldo maximo permitido");
            //}
        }
        else if(FieldTipo.getText().equals("Analista")){
            leerfieldAnalista();
//            int numeroAux;
//            String nombreAux;
//            float SueldoAux;
//            float SueldoMaximoAux;
//            float PlusAnualAux;
//            int NumeroDeparAux;
//
//            numeroAux = Integer.parseInt(FieldNumero.getText());
//            nombreAux = FieldNombre.getText();
//            SueldoAux = Float.parseFloat(FieldSueldo.getText());
//            SueldoMaximoAux = Float.parseFloat(FieldSueldoMaximo.getText());
//            PlusAnualAux = Float.parseFloat(FieldCambia1.getText());
//            NumeroDeparAux = Integer.parseInt(FieldCambia2.getText());
//
//            try {
//                    Analista A1 = new Analista(numeroAux, nombreAux, SueldoAux, SueldoMaximoAux, PlusAnualAux, NumeroDeparAux);
//                    A1.setSueldo(SueldoAux);
//                    ListaEmpleado.add(A1);   
//                    rellenarFieldAnalista(ListaEmpleado);
//                    activarBotones();
//                    statusFieldFalse();
//                        if(ListaEmpleado.esPrimero()){
//                            Siguiente.setEnabled(false);
//                            Atras.setEnabled(true);
//                        }
//                        else if(ListaEmpleado.esUltimo()){
//                            Siguiente.setEnabled(true);
//                            Atras.setEnabled(false);
//                        }
//                        else if(ListaEmpleado.getContador() == 1){
//                            Siguiente.setEnabled(false);
//                            Atras.setEnabled(false);
//                        }
//            } catch (SaldoEx ex) {
//                    JOptionPane.showMessageDialog(rootPane, "El sueldo supera al sueldo maximo permitido");
//            }
        }
        
        
        activarBotones();
        statusFieldFalse();
            if(ListaEmpleado.esPrimero()){
                Siguiente.setEnabled(false);
                Atras.setEnabled(true);
            }
            else if(ListaEmpleado.esUltimo()){
                Siguiente.setEnabled(true);
                Atras.setEnabled(false);
            }
            else if(ListaEmpleado.getContador() == 1){
                Siguiente.setEnabled(false);
                Atras.setEnabled(false);
            }

    }//GEN-LAST:event_confirmarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Vista2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Vista2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Vista2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Vista2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Vista2().setVisible(true);
            }
        });
    }
    
    public void statusFieldFalse(){
        FieldNombre.setEnabled(false);
        FieldFecha_alta.setEnabled(false);
        FieldCambia1.setEnabled(false);
        FieldCambia2.setEnabled(false);
        FieldNumero.setEnabled(false);
        FieldSueldo.setEnabled(false);
        FieldSueldoMaximo.setEnabled(false);
        FieldTipo.setEnabled(false);
    }
    
    public void statusFieldtrue(){
        FieldNombre.setEnabled(true);
        FieldNombre.setText(null);
        FieldFecha_alta.setText("Automatico");
        FieldCambia1.setEnabled(true);
        FieldCambia1.setText(null);
        FieldCambia2.setEnabled(true);
        FieldCambia2.setText(null);
        FieldNumero.setEnabled(true);
        FieldNumero.setText(null);
        FieldSueldo.setEnabled(true);
        FieldSueldo.setText(null);
        FieldSueldoMaximo.setEnabled(true);
        FieldSueldoMaximo.setText(null);
        FieldTipo.setText(null);
    }
    
    public void leerfieldProgramador(){
        int numeroAux;
        String nombreAux;
        float SueldoAux;
        float SueldoMaximoAux;
        float SueldoExtraAux;
        String LenguajeAux;
        
        numeroAux = Integer.parseInt(FieldNumero.getText());
        nombreAux = FieldNombre.getText();
        SueldoAux = Float.parseFloat(FieldSueldo.getText());
        SueldoMaximoAux = Float.parseFloat(FieldSueldoMaximo.getText());
        SueldoExtraAux = Float.parseFloat(FieldCambia1.getText());
        LenguajeAux = FieldCambia2.getText();

        try {
                Programador P1 = new Programador(numeroAux, nombreAux, SueldoAux, SueldoMaximoAux, SueldoExtraAux, LenguajeAux);
                P1.setSueldo(SueldoAux);
                ListaEmpleado.add(P1);   
                comprobarTipo();
        } catch (SaldoEx ex) {
                JOptionPane.showMessageDialog(rootPane, "El sueldo supera al sueldo maximo permitido");
                comprobarTipo();
        }
    }
    
    public void leerfieldAnalista(){
        int numeroAux;
        String nombreAux;
        float SueldoAux;
        float SueldoMaximoAux;
        float PlusAnualAux;
        int NumeroDeparAux;
        
        numeroAux = Integer.parseInt(FieldNumero.getText());
        nombreAux = FieldNombre.getText();
        SueldoAux = Float.parseFloat(FieldSueldo.getText());
        SueldoMaximoAux = Float.parseFloat(FieldSueldoMaximo.getText());
        PlusAnualAux = Float.parseFloat(FieldCambia1.getText());
        NumeroDeparAux = Integer.parseInt(FieldCambia2.getText());
        
        try {
                    Analista A1 = new Analista(numeroAux, nombreAux, SueldoAux, SueldoMaximoAux, PlusAnualAux, NumeroDeparAux);
                    A1.setSueldo(SueldoAux);
                    ListaEmpleado.add(A1);   
                    comprobarTipo();
            } catch (SaldoEx ex) {
                    JOptionPane.showMessageDialog(rootPane, "El sueldo supera al sueldo maximo permitido");
                    comprobarTipo();
            }
    }

    public void CrearEmpleado(){
        desactivarBotones();
        statusFieldtrue();
    }
    
    public void activarBotones(){
        Siguiente.setEnabled(true);
        Atras.setEnabled(true);
        CargarDatos.setEnabled(true);
        GuardarDatos.setEnabled(true);
        CreadoMasivo.setEnabled(true);
        Crear.setEnabled(true);
        Ordenar.setEnabled(true);
        Ultimo.setEnabled(true);
        Primero.setEnabled(true);
        JList.setEnabled(true);
        Analista.setEnabled(false);
        Programador.setEnabled(false);
        confirmar.setEnabled(false);
    }
    
    public void desactivarTodo(){
        Siguiente.setEnabled(false);
        Calcular.setEnabled(false);
        Atras.setEnabled(false);
        CargarDatos.setEnabled(true);
        GuardarDatos.setEnabled(false);
        CreadoMasivo.setEnabled(true);
        Crear.setEnabled(true);
        Ordenar.setEnabled(false);
        Ultimo.setEnabled(false);
        Primero.setEnabled(false);
        JList.setEnabled(false);
        Analista.setEnabled(false);
        Programador.setEnabled(false);
        confirmar.setEnabled(false);
    }
     
    public void desactivarBotones(){
        Siguiente.setEnabled(false);
        Atras.setEnabled(false);
        CargarDatos.setEnabled(false);
        GuardarDatos.setEnabled(false);
        CreadoMasivo.setEnabled(false);
        Crear.setEnabled(false);
        Ordenar.setEnabled(false);
        Ultimo.setEnabled(false);
        Primero.setEnabled(false);
        JList.setEnabled(false);
        Analista.setEnabled(true);
        Programador.setEnabled(true);
        confirmar.setEnabled(true);
    }
    
    public void rellenarFieldAnalista(MyList lista){
        Analista aux = (Analista)lista.getact().getMain();
        lblcanbia1.setText("Plus Anual");
        LblCambia2.setText("Numero Depar");
        FieldTipo.setText(""+aux.getTipo());
        FieldFecha_alta.setText(""+(aux.getFecha_alta()).get(DAY_OF_MONTH)+"/" + (aux.getFecha_alta()).get(MONTH)+"/" + (aux.getFecha_alta()).get(YEAR));
        FieldNumero.setText(""+aux.getNumero());
        FieldNombre.setText(""+ aux.getNombre());
        FieldSueldo.setText(""+aux.getSueldo());
        FieldSueldoMaximo.setText(""+aux.getSueldoMaximo());
        FieldCambia1.setText(""+aux.getPlusAnual());
        FieldCambia2.setText(""+aux.getnDepar());
    }
    
    public void rellenarFieldProgramador(MyList lista){
        Programador aux = (Programador)lista.getact().getMain();
        lblcanbia1.setText("Sueldo Extra");
        LblCambia2.setText("Lenguaje");
        FieldTipo.setText(""+aux.getTipo());
        FieldFecha_alta.setText(""+(aux.getFecha_alta()).get(DAY_OF_MONTH)+"/" + (aux.getFecha_alta()).get(MONTH)+"/" + (aux.getFecha_alta()).get(YEAR));
        FieldNumero.setText(""+aux.getNumero());
        FieldNombre.setText(""+ aux.getNombre());
        FieldSueldo.setText(""+aux.getSueldo());
        FieldSueldoMaximo.setText(""+aux.getSueldoMaximo());
        FieldCambia1.setText(""+aux.getSueldo_extra());
        FieldCambia2.setText(""+aux.getLenguaje());
        
    }
    
    public void comprobarTipo(){
        Empleado aux = (Empleado)ListaEmpleado.getact().getMain();
        if(aux instanceof Analista){
            rellenarFieldAnalista(ListaEmpleado);
            if(((Analista) aux).CumplirAño()){
                Calcular.setEnabled(true);
            }
            else{
                Calcular.setEnabled(false);
            }
        }
        if(aux instanceof Programador){
            rellenarFieldProgramador(ListaEmpleado);
            if(((Programador) aux).CumplirMes()){
             Calcular.setEnabled(true);
            }
            else{
                Calcular.setEnabled(false);
            }
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Analista;
    private javax.swing.JButton Atras;
    private javax.swing.JButton Calcular;
    private javax.swing.JButton CargarDatos;
    private javax.swing.JButton CreadoMasivo;
    private javax.swing.JButton Crear;
    private javax.swing.JTextField FieldCambia1;
    private javax.swing.JTextField FieldCambia2;
    private javax.swing.JTextField FieldFecha_alta;
    private javax.swing.JTextField FieldNombre;
    private javax.swing.JTextField FieldNumero;
    private javax.swing.JTextField FieldSueldo;
    private javax.swing.JTextField FieldSueldoMaximo;
    private javax.swing.JTextField FieldTipo;
    private javax.swing.JButton GuardarDatos;
    private javax.swing.JButton JList;
    private javax.swing.JLabel LblCambia2;
    private javax.swing.JLabel LblNombre;
    private javax.swing.JLabel LblNumero;
    private javax.swing.JButton Ordenar;
    private javax.swing.JButton Primero;
    private javax.swing.JButton Programador;
    private javax.swing.JButton Siguiente;
    private javax.swing.JButton Ultimo;
    private javax.swing.JButton confirmar;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JFrame jFrame3;
    private javax.swing.JLabel lblFecha_alta;
    private javax.swing.JLabel lblSueldo;
    private javax.swing.JLabel lblSueldoMaximo;
    private javax.swing.JLabel lblTipo;
    private javax.swing.JLabel lblcanbia1;
    // End of variables declaration//GEN-END:variables
}
